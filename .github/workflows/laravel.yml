name: Laravel CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.2
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: booking-hotel-system
          MYSQL_USER: root
          MYSQL_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v4

    # Setup PHP
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, intl, pdo, tokenizer, xml, mysql
        coverage: none

    # Cache Composer dependencies
    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: ~/.composer/cache
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    # Install Composer dependencies
    - name: Install Composer dependencies
      run: composer install -q --no-ansi --no-interaction --no-progress --prefer-dist

    # Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16' # Sesuaikan dengan versi Node.js yang Anda gunakan

    # Cache npm dependencies
    - name: Cache npm dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-npm-

    # Install npm dependencies
    - name: Install npm dependencies
      run: npm install

    # Build frontend assets
    - name: Build frontend assets
      run: npm run build

    # Copy .env file
    - name: Copy .env
      run: |
        cp .env.example .env
        # Atur variabel lingkungan untuk testing
        sed -i 's/DB_HOST=127.0.0.1/DB_HOST=127.0.0.1/' .env
        sed -i 's/DB_PORT=3306/DB_PORT=3306/' .env
        sed -i 's/DB_DATABASE=booking-hotel-system/DB_DATABASE=booking-hotel-system/' .env
        sed -i 's/DB_USERNAME=root/DB_USERNAME=root/' .env
        sed -i 's/DB_PASSWORD=/DB_PASSWORD=root/' .env

    # Generate application key
    - name: Generate application key
      run: php artisan key:generate

    # Set directory permissions
    - name: Set directory permissions
      run: chmod -R 777 storage bootstrap/cache

    # Wait for MySQL to be ready
    - name: Wait for MySQL
      run: |
        for i in {1..30}; do
          if mysqladmin ping -h127.0.0.1 -uroot -proot --silent; then
            break
          fi
          echo "Waiting for MySQL..."
          sleep 1
        done

    # Create database schema
    - name: Create Database Schema
      run: php artisan migrate --force

    # Seed the database (opsional)
    - name: Seed the database
      run: php artisan db:seed --force

    # Execute tests
    - name: Execute tests
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: booking-hotel-system
        DB_USERNAME: root
        DB_PASSWORD: root
      run: php artisan test

    # Show Laravel logs on failure
    - name: Show Laravel Logs on Failure
      if: failure()
      run: cat storage/logs/laravel.log
